services:
	elasticMapper:
	 	class: Spameri\Elastic\Mapper\ElasticMapper

	insert:
		class: Spameri\Elastic\Model\Insert

	insertMultiple:
		class: Spameri\Elastic\Model\InsertMultiple

	prepareEntityArray:
		class: Spameri\Elastic\Model\Insert\PrepareEntityArray

	applyTimestamp:
		class: Spameri\Elastic\Model\Insert\ApplyTimestamp

	get:
		class: Spameri\Elastic\Model\Get

	getBy:
		class: Spameri\Elastic\Model\GetBy

	getAllBy:
		class: Spameri\Elastic\Model\GetAllBy

	delete:
		class: Spameri\Elastic\Model\Delete

	deleteMultiple:
		class: Spameri\Elastic\Model\DeleteMultiple

	serviceLocator:
		class: Spameri\Elastic\Model\ServiceLocator

	mapping:
		class: Spameri\Elastic\Model\Mapping

	entitySettingsProvider:
		class: Spameri\Elastic\Controls\EntityEdit\EntitySettingsProvider(%entities%)

	userProvider:
	 	class: Spameri\Elastic\Model\UserProvider

	neonSettingsProvider:
		class: Spameri\Elastic\Settings\NeonSettingsProvider(%host%, %port%)

	clientProvider:
	 	class: Spameri\Elastic\ClientProvider

	elasticPanelLogger:
		class: Spameri\Elastic\Diagnostics\PanelLogger(@elasticSearch.nullLogger)

	nullLogger:
		class: Psr\Log\NullLogger

	elasticPanel:
		class: Spameri\Elastic\Diagnostics\Panel

#	###
#	Commands
#	###

	createMapping:
		class: Spameri\Elastic\Commands\CreateMapping(%entities%)
		tags: [kdyby.console.command]

	updateMapping:
		class: Spameri\Elastic\Commands\UpdateMapping(%entities%)
		tags: [kdyby.console.command]

#	validateMapping:
#		class: Spameri\Elastic\Commands\ValidateMapping(%entities%)
#		tags: [kdyby.console.command]
# TODO VALIDATE

#	###
#	Elastic/Elastic
#	###

	clientBuilder:
	 	class: Elasticsearch\ClientBuilder
	 	setup:
	 		- setLogger(@elasticSearch.elasticPanelLogger)

	constantProvider:
		class: Kdyby\DateTimeProvider\Provider\ConstantProvider(new \DateTimeImmutable)
